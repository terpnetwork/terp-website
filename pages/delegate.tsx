import Head from 'next/head';
import { useState } from 'react';
import {
  Button,
  ButtonGroup,
  Box,
  Card,
  CardBody,
  CardHeader,
  Container,
  Flex,
  Heading,
  Link,
  Icon,
  SimpleGrid,
  Stack,
  StackDivider,
  Text,
  useColorMode,
  VStack,
} from '@chakra-ui/react';
import {
  Product,
  Dependency,
  WalletSection,
  StakingSection,
} from '../components';
import { defaultChainName, dependencies, products } from '../config';
import { WalletStatus } from '@cosmos-kit/core';
import { useChain } from '@cosmos-kit/react';
import { BsFillMoonStarsFill, BsFillSunFill } from 'react-icons/bs';
import { FaUserCircle } from 'react-icons/fa';
import { IoWalletOutline } from 'react-icons/io5';
import { ChainWalletCard } from '../components';


export default function Home() {
  const { username, connect, disconnect, wallet } = useChain('terpnetwork');
  const [globalStatus, setGlobalStatus] = useState<WalletStatus>(
    WalletStatus.Disconnected
  );


  
  const getGlobalButton = () => {
    if (globalStatus === 'Connecting') {
      return (
        <Button
          isLoading
          loadingText={`Connecting ${wallet?.prettyName}`}
          colorScheme="teal"
          size="md"
          marginTop={6}
          marginBottom={2}
        />
      );
    }
    if (globalStatus === 'Connected') {
      return (
        <ButtonGroup
          size="md"
          isAttached
          variant="solid"
          marginTop={6}
          marginBottom={2}
        >
          <Button
            leftIcon={<IoWalletOutline />}
            isActive={true}
            variant="outline"
          >
            {wallet?.prettyName}
          </Button>
          <Button leftIcon={<FaUserCircle />} isActive={true} variant="outline">
            {username}
          </Button>
          <Button
            colorScheme="teal"
            onClick={async () => {
              await disconnect();
              setGlobalStatus(WalletStatus.Disconnected);
            }}
          >
            Disconnect
          </Button>
        </ButtonGroup>
      );
    }

    return (
      <Button
        isLoading={false}
        loadingText={`Connecting ${wallet?.prettyName}`}
        size="md"
        marginTop={6}
        marginBottom={2}
        onClick={() => connect()}
      >
        Connect Wallet
      </Button>
    );
  };

  return (
    <Container maxW="5xl"  py={10}>   
      <Head>
        <title>Delegate Terps </title>
        <meta name="description" content="Generated by create cosmos app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
  

      {getGlobalButton()}
      
 
      <StakingSection chainName={defaultChainName} />
      
      
      <Box mb={3}>

      </Box>
      <Container py={20}>
      <Stack
        isInline={true}
        spacing={1}
        justifyContent="center"
        opacity={0.5}
        fontSize="sm"
      >
      <Text>Built </Text>
        <Text>With </Text>
        <Link
          href="https://github.com/cosmology-tech/create-cosmos-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Cosmology
        </Link>
        </Stack>
        </Container>
        </Container>
  );
};
